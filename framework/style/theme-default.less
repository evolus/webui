@import "theme-default-variables.less";

@keyframes ripple {
    0% {
        transform: scale(0, 0);
        opacity: 1;
    }
    20% {
        transform: scale(25, 25);
        opacity: 1;
    }
    100% {
        opacity: 0;
        transform: scale(80, 80);
    }
}
@keyframes ripple-bg {
    0% {
        opacity: 1;
    }
    100% {
        opacity: 0;
    }
}

/* Base */
body {
    font-family: 'Roboto', sans-serif;
    font-size: 0.9em;
    font-size-adjust: none;
    line-height: @default-line-height;
}

/* Push Buttons */
button,
input[type='button'] {
    .line-height-default();
    padding: unit(9 * @dp, em) unit(16 * @dp, em);
    border: none;
    border-radius: unit(2 * @dp, em);

    background: transparent;
    text-transform: uppercase;
    font-weight: 500;
    font-family: inherit;

    box-sizing: border-box;
    color: #333;

    outline: none !important;

    .ripple-effect();
}

button:focus,
input[type='button']:focus {
    background: rgba(153, 153, 153, 0.3);
}

button[mode='raised'],
input[type='button'][mode='raised'] {
    .z-depth(2);
}

button[role='primary'],
input[type='button'][role='primary'] {
    background-color: @primary_color;
    color: @inverted_text_color;
}
button[role='primary']:focus,
input[type='button'][role='primary']:focus {
    background-color: shade(@primary_color, 20%);
}

button[role='danger'],
input[type='button'][role='danger'] {
    background-color: @problem_color;
    color: @inverted_text_color;
}
button[role='danger']:focus,
input[type='button'][role='danger']:focus {
    background-color: shade(@problem_color, 20%);
}

button[disabled],
input[type='button'][disabled] {
    background: transparent;
    color: rgba(0, 0, 0, .26);
    text-shadow: none;
    box-shadow: none;
}

/* Checkbox & Radio */
.base-checkable-control() {
    font: inherit;
    font-size: 1em;
    display: inline-block;
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    margin: 0px;
    padding: 0px;
    background: transparent;

    &:before {
        .base-icon();
        color: fade(@base_text_color, 54%);

        font-size: unit(@default-line-height * 1.2, em);
        line-height: 1;
    }
    &:checked::before {
        color: @primary_color;
    }

    .InlineEntry > & + label {
        margin-left: 0.3em;
    }
}

input[type="checkbox"],
input[type="radio"] {
    .base-checkable-control();
}

.InlineEntry > * {
    vertical-align: middle;
}

input[type="checkbox"]:before {
    content: "\F131";
}
input[type="checkbox"]:checked::before {
    content: "\F135";
}
input[type="radio"]:before {
    content: "\F130";
}
input[type="radio"]:checked::before {
    content: "\F134";
}


/* Data Tables */
.widget_DataTable {
    background: #ffffff;
    border-radius: unit(2 * @dp, em);
    .z-depth(2);
}
.widget_DataTable[flat=true] {
    box-shadow: none;
}
.widget_DataTable > table {
    border-spacing: 0px;
}
.widget_DataTable > table > thead > tr > th {
    color: fade(@base_text_color, 54%);
    font-weight: 500;
    text-align: left;
    line-height: 1.2em;
    padding: 0px;
}
.widget_DataTable > table > thead > tr > th.Sortable {
    .ripple-effect();
}
.widget_DataTable > table > thead > tr > th.Sortable:hover {
    color: @primary_text_color;
    cursor: default;
    background: @hover_bg;
}
.widget_DataTable > table > thead > tr > th.Sortable.DescSort,
.widget_DataTable > table > thead > tr > th.Sortable.AscSort {
    position: relative;
    overflow: visible;
}
.widget_DataTable > table > thead > tr > th.Sortable.DescSort:before,
.widget_DataTable > table > thead > tr > th.Sortable.AscSort:before {
    position: absolute;
    left: 0em;
    top: 50%;
    margin-top: -0.5em;
}
.widget_DataTable > table > thead > tr > th.Sortable.DescSort {
    .icon("\F045");
}
.widget_DataTable > table > thead > tr > th.Sortable.AscSort {
    .icon("\F05D");
}
.widget_DataTable > table > thead > tr > th[data-type="numeric"],
.widget_DataTable > table > tbody > tr > td[data-type="numeric"] {
    text-align: right;
}

.widget_DataTable > table > thead > tr > th > div,
.widget_DataTable > table > tbody > tr > td > .CellContentWrapper {
    padding: unit(10 * @dp, em) unit(16 * @dp, em);
    box-sizing: border-box;
}
.widget_DataTable > table > thead > tr > th > div {
    height: unit(10 * @dp, em) * 2 + 1.2em;
}
.widget_DataTable > table > tbody > tr > td {
    line-height: 1.2em;
    border-top: solid unit(1 * @dp, em) fade(@base_text_color, 12%);
}
.widget_DataTable > table > tbody > tr:hover {
    background: @hover_bg;
}
.widget_DataTable > .ColumnSetting span {
    display: block;
}
.widget_DataTable > .ColumnSetting span i {
    .icon("\F1D9");
    font-size: unit(10 * @dp, em) * 2 + 0.4em;
    line-height: 1em;
    height: 1em;
    box-sizing: content-box;
    display: block;
    padding: (0.4em / (20 * @dp + 0.4)) 0em;
    color: fade(@base_text_color, 54%);

    .ripple-effect();
}
.widget_DataTable > .ColumnSetting span i:hover {
    background: @hover_bg;
}

/* Tab Pane */
.widget_TabPane > .AnonId_header {
    background: @primary_color;
    color: fade(@base_inverted_text_color, 70%);
}
.widget_TabPane > .AnonId_header > .TabHeader {
    padding: unit(15 * @dp, em) unit(24 * @dp, em);
    text-transform: uppercase;
    font-weight: 500;
    text-align: center;
    max-width: unit(200 * @dp, em);

    .ripple-effect();
}
.widget_TabPane > .AnonId_header > .TabHeader.ActiveTab {
    color: @base_inverted_text_color;
    border-bottom: solid unit(2 * @dp, em) @secondary_color;
}
.widget_TabPane > .AnonId_content > .TabBody {
    padding: unit(18 * @dp, em);
}

/* Popup, Menu and Combo */

.AnonId_popupContainer {
    background: #ffffff;
    border-radius: unit(2 * @dp, em);
    .z-depth(2);

    transition: opacity 0.4s;
    box-sizing: border-box;

    padding: unit(8 * @dp, em) 0rem;
}

.AnonId_popupContainer.ComboManagerPopup .AnonId_list .Item {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

.AnonId_popupContainer.MenuPopupContainer .MenuItem:not(.MenuSeparator) {
    align-items: center;
}
.AnonId_popupContainer.MenuPopupContainer .MenuItem:not(.MenuSeparator),
.AnonId_popupContainer.ComboManagerPopup .AnonId_list .Item {
    padding: unit(8 * @dp, em) unit(12 * @dp, em);
    cursor: default;
}
.AnonId_popupContainer.MenuPopupContainer .MenuSeparator {
    border: none;
    border-top: solid unit(2 * @dp, em) rgba(0, 0, 0, 12%);
    height: unit(2 * @dp, em);
    box-sizing: border-box;
    margin: unit(7 * @dp, em) 0em;
}
.AnonId_popupContainer.MenuPopupContainer .MenuItem.Active:not([disabled='true']),
.AnonId_popupContainer.MenuPopupContainer .MenuItem:not([disabled='true']):hover,
.AnonId_popupContainer.ComboManagerPopup .AnonId_list .Item:hover {
    background: @hover_bg;
    color: @base_text_color;
}
.AnonId_popupContainer.MenuPopupContainer .MenuItem[disabled='true'] {
    opacity: 0.3;
}
.AnonId_popupContainer.MenuPopupContainer .MenuItem > label {
    min-width: 1em;
}
.AnonId_popupContainer.MenuPopupContainer .MenuItem > i {
    @iconify();
    font-size: 1.4em;
    width: 1.2em;
}

.AnonId_popupContainer.MenuPopupContainer .MenuItem > input {
    width: 1.2em * 1.4;
}

.AnonId_popupContainer.MenuPopupContainer .MenuItem > label + i {
    text-align: right;
}
.AnonId_popupContainer.MenuPopupContainer .MenuItem > *:first-child + label {
    margin-left: 0.8ex;
}
.AnonId_popupContainer.MenuPopupContainer.NoPrefix .MenuItem > *:first-child + label {
    margin-left: 0ex;
}
.AnonId_popupContainer.MenuPopupContainer .MenuItem > *:first-child + label + * {
    margin-left: 2ex;
}

/*
@header {
    border-bottom: solid 1px #DDDDDD;
    padding: 0px;
    cursor: pointer;
}
@header .TabHeader {
    border: solid 1px transparent;

    padding: 0.5em 0.7em;
    color: rgba(0, 0, 0, 0.6);
    font-weight: bold;
}
@header .ActiveTab {
    color: #000;
    border-color: #DDDDDD;
    border-top-left-radius: 0.3em;
    border-top-right-radius: 0.3em;
    border-bottom: none;
    margin-bottom: -1px;
    background: #FAFAFA;
    cursor: default;
}
*/
